@page "/register"
@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Register</PageTitle>

<div class="auth-container">
    <div class="auth-card">
        <h3>Create Account</h3>
        <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label>Email</label>
                <InputText class="form-control" @bind-Value ="registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText type="password" class="form-control" @bind-Value ="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary btn-block">Register</button>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">@errorMessage</div>
            }
        </EditForm>
        <div class="mt-3 text-center">
            <a href="/login">Already have an account? Login</a>
        </div>
    </div>
</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string errorMessage;

    private async Task HandleRegistration()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/register", registerModel);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/login");
            }
            else
            {
                errorMessage = "Registration failed. Please try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}